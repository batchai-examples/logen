version: '2.2'

#networks:
#  default:
#    driver: bridge
#  bizxdockerdev_default:
#    external: true
#  bizx-docker-dev_default:
#    external: true


services:

  # to enable EFK, check below example
  # elasticsearch:
  #   container_name: bts.elasticsearch
  #   extends:
  #     file:   ./docker-compose.base.yml
  #     service: elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    ports:
      - 127.0.0.1:9200:9200
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
    ulimits:
      memlock:
        hard: -1
        soft: -1
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'


  # to enable EFK, check below example
  # fluentd:
  #   container_name: fluentd
  #   extends:
  #     file:   ./docker-compose.base.yml
  #     service: fluentd
  #   depends_on:
  #     - elasticsearch
  fluentd:
    build:
      context: ./fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - 127.0.0.1:127.0.0.1:24224:24224
      - 127.0.0.1:127.0.0.1:24224:24224/udp

  # to enable EFK, check below example
  # kibana:
  #   container_name: bts.kibana
  #   extends:
  #     file:   ./docker-compose.base.yml
  #     service: kibana
  #   depends_on:
  #     - elasticsearch
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.0
    environment:
      SERVER_HOST: 0.0.0.0
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 127.0.0.1:5601:5601
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

  # to enable Elastic APM, check below example
  # apm-server:
  #   container_name: bts.apm-server
  #   extends:
  #     file:   ./docker-compose.base.yml
  #     service: apm-server
  #   depends_on:
  #     - elasticsearch
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.7.0
    ports:
      - 127.0.0.1:8200:8200
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

